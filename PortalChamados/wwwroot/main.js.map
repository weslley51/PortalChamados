{"version":3,"sources":["webpack:///./Client/$_lazy_route_resource lazy namespace object","webpack:///./Client/app/app-routing.module.ts","webpack:///./Client/app/app.component.html","webpack:///./Client/app/app.component.ts","webpack:///./Client/app/app.module.ts","webpack:///./Client/app/components/authentication/auth.guard.ts","webpack:///./Client/app/components/chamado/chamado.component.html","webpack:///./Client/app/components/chamado/chamado.component.ts","webpack:///./Client/app/components/chamado/chamados.component.html","webpack:///./Client/app/components/chamado/chamados.component.ts","webpack:///./Client/app/components/chamado/configurations/chamado.module.ts","webpack:///./Client/app/components/chamado/configurations/chamado.routing.ts","webpack:///./Client/app/components/entidadeSimples/configurations/entidadeSimples.module.ts","webpack:///./Client/app/components/entidadeSimples/configurations/entidadeSimples.routing.ts","webpack:///./Client/app/components/entidadeSimples/entidadeSimples.component.html","webpack:///./Client/app/components/entidadeSimples/entidadeSimples.component.ts","webpack:///./Client/app/components/grupoServico/configurations/grupoServico.module.ts","webpack:///./Client/app/components/grupoServico/configurations/grupoServico.routing.ts","webpack:///./Client/app/components/grupoServico/gruposServico.component.html","webpack:///./Client/app/components/grupoServico/gruposServico.component.ts","webpack:///./Client/app/components/login/login.component.html","webpack:///./Client/app/components/login/login.component.ts","webpack:///./Client/app/components/servico/configurations/servico.module.ts","webpack:///./Client/app/components/servico/configurations/servico.routing.ts","webpack:///./Client/app/components/servico/servico.component.html","webpack:///./Client/app/components/servico/servico.component.ts","webpack:///./Client/app/components/servico/servicos.component.html","webpack:///./Client/app/components/servico/servicos.component.ts","webpack:///./Client/app/components/usuario/usuario.component.html","webpack:///./Client/app/components/usuario/usuario.component.ts","webpack:///./Client/app/interceptors/api.interceptor.ts","webpack:///./Client/app/services/api.service.ts","webpack:///./Client/app/shared/components/card/card.component.html","webpack:///./Client/app/shared/components/card/card.component.ts","webpack:///./Client/app/shared/components/shared.module.ts","webpack:///./Client/app/shared/utils/funcoesGerais.ts","webpack:///./Client/app/viewModels/departamentoViewModel.ts","webpack:///./Client/app/viewModels/funcionalidadeViewModel.ts","webpack:///./Client/app/viewModels/permissaoViewModel.ts","webpack:///./Client/app/viewModels/usuarioViewModel.ts","webpack:///./Client/environments/environment.ts","webpack:///./Client/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./Client/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './components/authentication/auth.guard';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ChamadosComponent } from './components/chamado/chamados.component';\r\n\r\nconst routes: Routes = [    \r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'chamados', component: ChamadosComponent },\r\n    { path: '**', redirectTo: 'login' }/*,\r\n    { path: 'register', component: RegisterComponent }*/\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <header class=\\\"row row-without-padding bg-dark\\\">\\r\\n        <nav class=\\\"navbar navbar-dark\\\">\\r\\n            <div class=\\\"col-md-3 col-lg-2 col-without-padding\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col col-without-padding\\\">\\r\\n                <div class=\\\"row row-without-padding\\\">\\r\\n                    <button class=\\\"navbar-toggler col-1 col-without-padding align-self-end\\\" type=\\\"button\\\" (click)=\\\"isMenuCollapsed = !isMenuCollapsed\\\">\\r\\n                        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nav>\\r\\n    </header>\\r\\n\\r\\n    <section class=\\\"row row-without-padding\\\">\\r\\n        <!--\\r\\n        <div id=\\\"loading\\\">\\r\\n            <div id=\\\"loading-text\\\"><span class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></span></div>\\r\\n        </div>\\r\\n        -->\\r\\n        <div class=\\\"col-md-3 col-lg-2 col-without-padding bg-dark\\\" *ngIf=\\\"!isMenuHidden\\\" style=\\\"margin-bottom:0px\\\">\\r\\n            <div class=\\\"row row-without-padding\\\">\\r\\n                <div class=\\\"col-1\\\">\\r\\n                    <span class=\\\"text-white\\\">ico</span>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" [ngbCollapse]=\\\"isMenuCollapsed\\\">\\r\\n                    <span class=\\\"text-white\\\">Toggleable via the navbar brand.</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col col-without-padding\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </section>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n       \r\n    public isMenuHidden: boolean;\n    public isMenuCollapsed: boolean;\n\r\n    ngOnInit() {\r\n        this.isMenuHidden = false;\r\n        this.isMenuCollapsed = false;\r\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UsuarioComponent } from './components/usuario/usuario.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nimport { ApiService } from './services/api.service';\r\nimport { AuthGuard } from './components/authentication/auth.guard';\r\nimport { ApiInterceptor, BASE_API_URL } from './interceptors/api.interceptor';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ChamadoModule } from './components/chamado/configurations/chamado.module';\r\nimport { ServicoModule } from './components/servico/configurations/servico.module';\r\nimport { EntidadeSimplesModule } from './components/entidadeSimples/configurations/entidadeSimples.module';\r\nimport { GrupoServicoModule } from './components/grupoServico/configurations/grupoServico.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n        LoginComponent,\r\n        UsuarioComponent\r\n\t],\r\n    imports: [\r\n        NgbModule,\r\n        NgbModule.forRoot(),\r\n        ChamadoModule,\r\n        ServicoModule,\r\n        GrupoServicoModule,\r\n        EntidadeSimplesModule,\r\n        AppRoutingModule,\r\n\t\tBrowserModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule\r\n\t],\r\n    providers: [\r\n        AuthGuard,\r\n        ApiService,\r\n        { provide: BASE_API_URL, useValue: environment.BaseApiUrl },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true }\r\n\t],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('usuarioLogado'))\r\n            return true;\r\n\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row align-items-center\\\">\\r\\n                <div class=\\\"col-11\\\">\\r\\n                    <h4>Novo Chamado</h4>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"formChamado\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"Departamento\\\">Departamento: </label>\\r\\n                        <select class=\\\"form-control\\\" name=\\\"Departamento\\\" id=\\\"Departamento\\\" formControlName=\\\"Departamento\\\">\\r\\n                            <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                            <option *ngFor=\\\"let departamento of departamentos\\\">{{ departamento.Sigla }}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"Status\\\">Situação: </label>\\r\\n                        <select class=\\\"form-control\\\" name=\\\"Unidade\\\" id=\\\"Unidade\\\" formControlName=\\\"Unidade\\\">\\r\\n                            <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                            <option *ngFor=\\\"let s of status\\\">\\r\\n                                {{ s.Nome }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"Inicio\\\">De: </label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input id=\\\"Inicio\\\" name=\\\"Inicio\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Inicio\\\" ngbDatepicker #de=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"de.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"Fim\\\">Até: </label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input id=\\\"Fim\\\" name=\\\"Fim\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Fim\\\" ngbDatepicker #ate=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"ate.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"Solucionador\\\">Solucionador: </label>\\r\\n                        <input type=\\\"text\\\" name=\\\"Solucionador\\\" class=\\\"form-control\\\" id=\\\"Solucionador\\\" formControlName=\\\"Solucionador\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label for=\\\"AbertoPor\\\">Aberto Por: </label>\\r\\n                        <input type=\\\"text\\\" name=\\\"AbertoPor\\\" class=\\\"form-control\\\" id=\\\"AbertoPor\\\" formControlName=\\\"AbertoPor\\\" />\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <button class=\\\"btn btn-warning\\\" (click)=\\\"limpar()\\\" type=\\\"reset\\\"><span class=\\\"font-weight-bold\\\">Limpar</span> <span class=\\\"fa fa-broom px-2\\\"></span></button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"voltar()\\\" type=\\\"button\\\"><span class=\\\"font-weight-bold\\\">Voltar</span> <span class=\\\"fa fa-arrow-left px-2\\\"></span></button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\"><span class=\\\"font-weight-bold\\\">Salvar</span> <span class=\\\"fa fa-file px-2\\\"></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IDepartamentoViewModel } from '../../viewModels/departamentoViewModel';\r\nimport { IChamadoViewModel } from '../../viewModels/chamadoViewModel';\r\nimport { IUsuarioViewModel } from '../../viewModels/usuarioViewModel';\r\nimport { IStatusViewModel } from '../../viewModels/statusViewModel';\r\n\r\n@Component({templateUrl: './chamado.component.html'})\r\n\r\nexport class ChamadoComponent implements OnInit {\r\n    public formChamado: FormGroup;\r\n\r\n    public status: IStatusViewModel[];\r\n    public usuarios: IUsuarioViewModel[];\r\n    public chamados: IChamadoViewModel[];\r\n    public departamentos: IDepartamentoViewModel[];\r\n\r\n    public tituloFiltros: string;\r\n    public isListaCollapsed: boolean;\r\n    public isFiltroCollapsed: boolean;\r\n    public gerenciandoChamados: boolean;\r\n\r\n    constructor(private api: ApiService) { }\r\n\r\n    ngOnInit() {\r\n        this.tituloFiltros = 'Filtros';\r\n        this.isListaCollapsed = false;\r\n        this.isFiltroCollapsed = false;\r\n        this.gerenciandoChamados = false;\r\n\r\n        this.buscarChamados();\r\n        this.buscarDepartamentos();\r\n        this.buscarStatus();\r\n        this.buscarUsuarios();\r\n\r\n        this.formChamado = new FormGroup({\r\n            Departamento: new FormControl(''),\r\n            Unidade: new FormControl(''),\r\n            Status: new FormControl(''),\r\n            Inicio: new FormControl(''),\r\n            Fim: new FormControl(''),\r\n            AbertoPor: new FormControl(''),\r\n            Solucionador: new FormControl('')\r\n        });\r\n    }\r\n\r\n    buscarChamados(idDepartamento?: number, idUnidade?: number, idStatus?: number, idLogin?: number) {\r\n        this.api.get<IChamadoViewModel[]>('api/Chamado', (result) => {\r\n            this.chamados = result;\r\n        });\r\n    }\r\n\r\n    buscarDepartamentos() {\r\n        this.api.get<IDepartamentoViewModel[]>('api/Departamento', (result) => {\r\n            this.departamentos = result;\r\n        });\r\n    }\r\n\r\n    buscarStatus() {\r\n        this.api.get<IStatusViewModel[]>('api/Status', (result) => {\r\n            this.status = result;\r\n        });\r\n    }\r\n\r\n    buscarUsuarios() {\r\n        this.api.get<IUsuarioViewModel[]>('api/Usuario', (result) => {\r\n            this.usuarios = result;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<card [titulo]=\\\"'Filtros'\\\" [isCollapsed]=\\\"isFiltroCollapsed\\\">\\r\\n    <div card-body>\\r\\n        <form [formGroup]=\\\"formFiltros\\\" (ngSubmit)=\\\"buscarChamados()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Departamento\\\">Departamento: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"Departamento\\\" id=\\\"Departamento\\\" formControlName=\\\"Departamento\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let departamento of departamentos\\\" value=\\\"{{departamento.Id}}\\\">{{ departamento.Sigla }}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Status\\\">Situação: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"Status\\\" id=\\\"Status\\\" formControlName=\\\"Status\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let s of status\\\" value=\\\"{{s.Id}}\\\">\\r\\n                            {{ s.Nome }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Solucionador\\\">Solucionador: </label>\\r\\n                    <input type=\\\"text\\\" name=\\\"Solucionador\\\" class=\\\"form-control\\\" id=\\\"Solucionador\\\" formControlName=\\\"Solucionador\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Inicio\\\">De: </label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input id=\\\"Inicio\\\" name=\\\"Inicio\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Inicio\\\" ngbDatepicker #de=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"de.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Fim\\\">Até: </label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input id=\\\"Fim\\\" name=\\\"Fim\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Fim\\\" ngbDatepicker #ate=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"ate.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Solicitante\\\">Aberto Por: </label>\\r\\n                    <input type=\\\"text\\\" name=\\\"Solicitante\\\" class=\\\"form-control\\\" id=\\\"Solicitante\\\" formControlName=\\\"Solicitante\\\" />\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row justify-content-around\\\">\\r\\n                <div class=\\\"col-md-3 col-sm-4\\\"><button class=\\\"btn btn-block btn-warning\\\" (click)=\\\"limpar()\\\" type=\\\"reset\\\"><span class=\\\"font-weight-bold\\\">Limpar</span> <span class=\\\"fa fa-ban px-2\\\"></span></button></div>\\r\\n                <div class=\\\"col-md-3 col-sm-4\\\"><button class=\\\"btn btn-block btn-primary\\\" type=\\\"submit\\\"><span class=\\\"font-weight-bold\\\">Buscar</span> <span class=\\\"fa fa-search px-2\\\"></span></button></div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<card [titulo]=\\\"'Lista de Chamados'\\\">\\r\\n    <div card-body>\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col text-center\\\" *ngIf=\\\"chamados?.length <= 0\\\">\\r\\n                <span><i>Não existem chamados com os filtros informados !</i></span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12\\\" *ngIf=\\\"chamados?.length > 0\\\">\\r\\n                <table class=\\\"table table-condensed table-hover table-striped table-responsive internal-tables\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th [hidden]=\\\"!gerenciandoChamados\\\"></th>\\r\\n                            <th>#</th>\\r\\n                            <th>Data Abertura</th>\\r\\n                            <th>Serviço</th>\\r\\n                            <th>Descrição</th>\\r\\n                            <th>Solicitante</th>\\r\\n                            <th>Situação</th>\\r\\n                            <!--<th>Deadline</th>-->\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let chamado of chamados\\\">\\r\\n                            <td [hidden]=\\\"!gerenciandoChamados\\\">\\r\\n                                <!--|| chamado.Servico.Grupo.Departamento.Id != usuarioLogado.Departamento.Id-->\\r\\n                                <input type=\\\"checkbox\\\" id=\\\"chamado-{{chamado.Id}}\\\" name=\\\"chamado-{{chamado.Id}}\\\" class=\\\"form-control\\\" (click)=\\\"onChangeChamados($event)\\\" />\\r\\n                            </td>\\r\\n                            <td> {{ chamado.Id }} </td>\\r\\n                            <td> {{ chamado.DataSolicitacao | date : 'dd/MM/yyyy' }} </td>\\r\\n                            <td> {{ chamado.Servico.Nome }} </td>\\r\\n                            <td> {{ chamado.Descricao }}</td>\\r\\n                            <td> {{ chamado.Solicitante.Login }} </td>\\r\\n\\r\\n                            <!--\\r\\n                            <td> {{ chamado.Status.Nome }} </td>\\r\\n                            <td> {{ chamado.Deadline | date : 'dd/MM/yyyy' }} </td>\\r\\n                            -->\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div card-footer>\\r\\n        <div class=\\\"row justify-content-around\\\">\\r\\n            <div class=\\\"col-md-6 col-sm-8\\\" [hidden]=\\\"gerenciandoChamados\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-secondary font-weight-bold\\\" (click)=\\\"gerenciandoChamados = true\\\">\\r\\n                    <span class=\\\"font-weight-bold\\\">Gerenciar Chamados</span> <span class=\\\"fa fa-check-square px-2\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-5 col-sm-6\\\" [hidden]=\\\"!gerenciandoChamados\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-success font-weight-bold\\\" (click)=\\\"abrirModal(modal)\\\">\\r\\n                    <span class=\\\"font-weight-bold\\\">Selecionar Solucionador</span> <span class=\\\"fa fa-tasks px-2\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3\\\" [hidden]=\\\"!gerenciandoChamados\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-danger font-weight-bold\\\" (click)=\\\"gerenciandoChamados = false\\\">\\r\\n                    <span class=\\\"font-weight-bold\\\">Cancelar</span> <span class=\\\"fa fa-ban px-2\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-primary font-weight-bold\\\" routerLink=\\\"/chamado/novo\\\">\\r\\n                    <span class=\\\"font-weight-bold\\\">Novo</span> <span class=\\\"fa fa-plus-square px-2\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<ng-template #modal let-modal>\\r\\n    <div class=\\\"modal-header main-color\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Atribuir Solucionador</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close main-color\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n            <span class=\\\"fa fa-times\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"formChamados\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Solucionador\\\">Solucionador</label>\\r\\n                        <select class=\\\"form-control\\\" name=\\\"Solucionador\\\" id=\\\"Solucionador\\\" formControlName=\\\"Solucionador\\\">\\r\\n                            <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                            <option *ngFor=\\\"let solucionador of usuarios\\\" value=\\\"{{solucionador.Id}}\\\">\\r\\n                                {{ solucionador.Login }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <p *ngIf=\\\"solucionador\\\"><b>Deseja realmente atribuir o Usuário {{ solucionador.Login }} como Solucionador dos chamados selecionados ?</b></p>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"modal.dismiss()\\\"><span class=\\\"font-weight-bold\\\">Cancelar</span> <span class=\\\"fa fa-times px-2\\\"></span></button>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"formSolucionador.invalid\\\" (click)=\\\"setarSolucionador()\\\"><span class=\\\"font-weight-bold\\\">Confirmar</span> <span class=\\\"fa fa-save px-2\\\"></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IDepartamentoViewModel } from '../../viewModels/departamentoViewModel';\r\nimport { IChamadoViewModel } from '../../viewModels/chamadoViewModel';\r\nimport { IUsuarioViewModel } from '../../viewModels/usuarioViewModel';\r\nimport { IStatusViewModel } from '../../viewModels/statusViewModel';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({ templateUrl: './chamados.component.html', providers: [NgbModalConfig, NgbModal]})\r\n\r\nexport class ChamadosComponent implements OnInit {\r\n    public formFiltros: FormGroup;\r\n    public formChamados: FormGroup;\r\n\r\n    public status: IStatusViewModel[];\r\n    public usuarios: IUsuarioViewModel[];\r\n    public chamados: IChamadoViewModel[];\r\n    public departamentos: IDepartamentoViewModel[];\r\n\r\n    public isFiltroCollapsed: boolean;\r\n    public gerenciandoChamados: boolean;\r\n\r\n    constructor(private api: ApiService, private config: NgbModalConfig, private modalService: NgbModal) {\r\n        config.backdrop = 'static';\r\n        config.keyboard = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isFiltroCollapsed = false;\r\n        this.gerenciandoChamados = false;\r\n        \r\n        this.buscarDepartamentos();\r\n        this.buscarStatus();\r\n        this.buscarUsuarios();\r\n\r\n        //this.buscarEntidades<IDepartamentoViewModel[]>('Departamento', this.departamentos);\r\n        //this.buscarEntidades<IStatusViewModel[]>('Status', this.status);\r\n        //this.buscarEntidades<IUsuarioViewModel[]>('Usuario', this.usuarios);\r\n\r\n        this.formFiltros = new FormGroup({\r\n            Departamento: new FormControl(''),\r\n            Status: new FormControl(''),\r\n            Situacao: new FormControl(''),\r\n            Inicio: new FormControl(''),\r\n            Fim: new FormControl(''),\r\n            Solicitante: new FormControl(''),\r\n            Solucionador: new FormControl('')\r\n        });\r\n\r\n        this.formChamados = new FormGroup({\r\n            Chamados: new FormControl('', Validators.required),\r\n            Solucionador: new FormControl('', Validators.required)\r\n        });\r\n    }\r\n\r\n    abrirModal(modal) {\r\n        this.modalService.open(modal);\r\n    }\r\n\r\n    buscarEntidades<T>(url, lista) {\r\n        this.api.get<T>('api/' + url, result => lista = result);\r\n    }\r\n    \r\n    buscarDepartamentos() {\r\n        this.api.get<IDepartamentoViewModel[]>('api/Departamento', result => this.departamentos = result);\r\n    }\r\n\r\n    buscarStatus() {\r\n        this.api.get<IStatusViewModel[]>('api/Status', result => this.status = result);\r\n    }\r\n\r\n    buscarUsuarios() {\r\n        this.api.get<IUsuarioViewModel[]>('api/Usuario', result => this.usuarios = result);\r\n    }\r\n\r\n    buscarChamados() {\r\n        this.api.getWithFilter<IChamadoViewModel[]>('api/Chamado', this.formFiltros.value, result => this.chamados = result);\r\n    }\r\n\r\n    limpar() {\r\n        this.formFiltros.reset();\r\n    }\r\n    \r\n    onChangeChamados(selecionado) {\r\n        console.log(selecionado);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChamadosRouting } from './chamado.routing';\r\nimport { ChamadoComponent } from '../chamado.component';\r\nimport { ChamadosComponent } from '../chamados.component';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../../shared/components/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ChamadoComponent,\r\n        ChamadosComponent\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        ChamadosRouting,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [ApiService]\r\n})\r\n\r\nexport class ChamadoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../../authentication/auth.guard';\r\nimport { ChamadosComponent } from '../chamados.component';\r\nimport { ChamadoComponent } from '../chamado.component';\r\n\r\nconst routes: Routes = [    \r\n    {\r\n        path: 'chamados', component: ChamadosComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'chamado/novo', component: ChamadoComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'chamado/visualizar', component: ChamadoComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'chamado/editar', component: ChamadoComponent,\r\n        canActivate: [AuthGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class ChamadosRouting { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../../shared/components/shared.module';\r\nimport { EntidadeSimplesComponent } from '../entidadeSimples.component';\r\nimport { EntidadeSimplesRouting } from './entidadeSimples.routing';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        EntidadeSimplesComponent,\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        EntidadeSimplesRouting,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [ApiService]\r\n})\r\n\r\nexport class EntidadeSimplesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../../authentication/auth.guard';\r\nimport { EntidadeSimplesComponent } from '../entidadeSimples.component';\r\n\r\nconst routes: Routes = [    \r\n    {\r\n        path: 'tipoServico', component: EntidadeSimplesComponent, data: { titulo: 'Tipos de Serviço', endPoint: 'TipoServico' }, \r\n        canActivate: [AuthGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class EntidadeSimplesRouting { }\r\n","module.exports = \"<card [titulo]=\\\"titulo\\\">\\r\\n    <div card-body>\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col text-center\\\" *ngIf=\\\"entidades?.length <= 0\\\">\\r\\n                <span><i>Não existem {{titulo}} cadastrados !</i></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\" *ngIf=\\\"chamados?.length > 0\\\">\\r\\n                <table class=\\\"table table-condensed table-hover table-striped table-responsive internal-tables\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nome</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let entidade of entidades\\\">\\r\\n                            <td (click)=\\\"abrirModal(modal, entidade)\\\"> {{ entidade.Nome }} </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div card-footer>\\r\\n        <div class=\\\"row justify-content-around\\\">\\r\\n            <div class=\\\"col-md-3\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-primary font-weight-bold\\\" (click)=\\\"abrirModal(modal, null)\\\" >Novo</button></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<ng-template #modal let-modal>\\r\\n    <form [formGroup]=\\\"formEntidade\\\" (ngSubmit)=\\\"salvar()\\\">\\r\\n        <div class=\\\"modal-header main-color\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Novo {{titulo}}</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n                <span class=\\\"fa fa-times\\\"></span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Nome\\\">Nome :</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"Nome\\\" class=\\\"form-control\\\" id=\\\"Nome\\\" formControlName=\\\"Nome\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"modal.dismiss()\\\"><span class=\\\"font-weight-bold\\\">Cancelar</span> <span class=\\\"fa fa-times px-2\\\"></span></button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"formEntidade.invalid\\\"><span class=\\\"font-weight-bold\\\">Confirmar</span> <span class=\\\"fa fa-save px-2\\\"></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IEntidadeSimplesViewModel } from '../../viewModels/entidadeSimplesViewModel';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({ templateUrl: './entidadeSimples.component.html', providers: [NgbModalConfig, NgbModal] })\r\n\r\nexport class EntidadeSimplesComponent implements OnInit {\r\n    public formEntidade: FormGroup;\r\n\r\n    public titulo: string;\r\n    public endPoint: string;\r\n    public entidades: IEntidadeSimplesViewModel[];\r\n\r\n    constructor(private api: ApiService, private config: NgbModalConfig, private modalService: NgbModal, private route: ActivatedRoute) {\r\n        config.backdrop = 'static';\r\n        config.keyboard = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(valor => {\r\n            this.titulo = valor.titulo;\r\n            this.endPoint = valor.endPoint;\r\n            this.buscarEntidades();\r\n        });\r\n        \r\n        this.formEntidade = new FormGroup({\r\n            Nome: new FormControl('', Validators.required),\r\n        });\r\n    }\r\n\r\n    abrirModal(modal) {\r\n        this.modalService.open(modal, { centered: true });\r\n    }\r\n\r\n    buscarEntidades() {\r\n        this.api.get<IEntidadeSimplesViewModel[]>('api/' + this.endPoint, (result) => {\r\n            this.entidades = result;\r\n        });\r\n    }\r\n\r\n    salvar() {\r\n        this.api.post<IEntidadeSimplesViewModel[]>('api/' + this.endPoint, this.formEntidade.value, (result) => {\r\n            this.entidades.push(result[0]);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GrupoServicoRouting } from './grupoServico.routing';\r\nimport { GruposServicoComponent } from '../gruposServico.component';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../../shared/components/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GruposServicoComponent,\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        GrupoServicoRouting,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [ApiService]\r\n})\r\n\r\nexport class GrupoServicoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../../authentication/auth.guard';\r\nimport { GruposServicoComponent } from '../gruposServico.component';\r\n\r\nconst routes: Routes = [    \r\n    {\r\n        path: 'gruposServico', component: GruposServicoComponent,\r\n        canActivate: [AuthGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class GrupoServicoRouting { }\r\n","module.exports = \"<card [titulo]=\\\"'Listagem de Grupos de Serviço'\\\">\\r\\n    <div card-body>\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <table class=\\\"table table-condensed table-hover table-striped table-responsive internal-tables\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nome</th>\\r\\n                            <th>Descrição</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let grupo of grupos\\\" (click)=\\\"abrirModal(modal, grupo)\\\">\\r\\n                            <td> {{ grupo.Nome }} </td>\\r\\n                            <td> {{ grupo.Descricao }} </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div card-footer>\\r\\n        <div class=\\\"row justify-content-around\\\">\\r\\n            <div class=\\\"col-md-3\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-primary font-weight-bold\\\" (click)=\\\"abrirModal(modal, null)\\\">Novo</button></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<ng-template #modal let-modal>\\r\\n    <div class=\\\"modal-header main-color\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Novo Grupo de Serviço</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close main-color\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n            <span class=\\\"fa fa-times\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"formGrupoServico\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Nome\\\">Nome :</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"Nome\\\" class=\\\"form-control\\\" id=\\\"Nome\\\" formControlName=\\\"Nome\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"Descricao\\\">Descrição: </label>\\r\\n                    <textarea class=\\\"form-control\\\" id=\\\"Descricao\\\" name=\\\"Descricao\\\" formControlName=\\\"Descricao\\\" maxlength=\\\"500\\\" rows=\\\"5\\\"></textarea>\\r\\n                    <label>{{500 - formGrupoServico.controls.Descricao.value?.length}} de 500 caracteres.</label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"modal.dismiss()\\\"><span class=\\\"font-weight-bold\\\">Cancelar</span> <span class=\\\"fa fa-times px-2\\\"></span></button>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"formGrupoServico.invalid\\\"><span class=\\\"font-weight-bold\\\">Confirmar</span> <span class=\\\"fa fa-save px-2\\\"></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IGrupoServicoViewModel } from '../../viewModels/grupoServicoViewModel';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({ templateUrl: './gruposServico.component.html', providers: [NgbModalConfig, NgbModal] })\r\n\r\nexport class GruposServicoComponent implements OnInit {\r\n    public formGrupoServico: FormGroup;\r\n\r\n    public grupos: IGrupoServicoViewModel[];\r\n\r\n    constructor(private api: ApiService, private config: NgbModalConfig, private modalService: NgbModal, private route: ActivatedRoute) {\r\n        config.backdrop = 'static';\r\n        config.keyboard = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buscarChamados();\r\n\r\n        this.formGrupoServico = new FormGroup({\r\n            Nome: new FormControl('', Validators.required),\r\n            Descricao: new FormControl('', Validators.maxLength(500)),\r\n        });\r\n    }\r\n\r\n    abrirModal(modal) {\r\n        this.modalService.open(modal);\r\n    }\r\n\r\n    buscarChamados(idDepartamento?: number, idUnidade?: number, idStatus?: number, idLogin?: number) {\r\n        this.api.get<IGrupoServicoViewModel[]>('api/GrupoServico', (result) => {\r\n            this.grupos = result;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"col login-box\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <img src=\\\"img/book.png\\\" height=\\\"160\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <form [formGroup]=\\\"formLogin\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <span class=\\\"fa fa-envelope col-xs-auto input-fa\\\"></span>\\r\\n            <input type=\\\"text\\\" class=\\\"col form-control\\\" id=\\\"Login\\\" name=\\\"Login\\\" formControlName=\\\"Login\\\">\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <span class=\\\"fa fa-lock col-xs-auto input-fa\\\"></span>\\r\\n            <input type=\\\"password\\\" class=\\\"col form-control\\\" id=\\\"Senha\\\" name=\\\"Senha\\\" formControlName=\\\"Senha\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"submit\\\" id=\\\"Logar\\\" class=\\\"btn btn-primary btn-block btn-flat\\\">ENTRAR</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <a class=\\\"col\\\" href=\\\"#\\\">Esqueci o e-mail ou senha</a>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IUsuarioViewModel, UsuarioViewModel } from '../../viewModels/usuarioViewModel';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    private returnUrl: string;\r\n    public formLogin: FormGroup;\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'chamados';\r\n\r\n        this.formLogin = new FormGroup({\r\n            Login: new FormControl('', Validators.required),\r\n            Senha: new FormControl('', Validators.required)\r\n        });\r\n\r\n        var usuarioLogado = JSON.parse(localStorage.getItem('usuarioLogado'));\r\n\r\n        if (usuarioLogado && usuarioLogado.Token) {\r\n            localStorage.setItem('usuarioLogado', JSON.stringify(usuarioLogado));\r\n            this.router.navigate(['chamados']);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        let usuario = new UsuarioViewModel(this.formLogin.value);\r\n        this.api.post<IUsuarioViewModel>('api/Usuario/Autenticar', usuario, (result) => {\r\n            localStorage.setItem('usuarioLogado', JSON.stringify(result));\r\n            this.router.navigate([this.returnUrl]);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServicosRouting } from './servico.routing';\r\nimport { ServicoComponent } from '../servico.component';\r\nimport { ServicosComponent } from '../servicos.component';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../../shared/components/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ServicoComponent,\r\n        ServicosComponent\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        ServicosRouting,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [ApiService]\r\n})\r\n\r\nexport class ServicoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../../authentication/auth.guard';\r\nimport { ServicosComponent } from '../servicos.component';\r\nimport { ServicoComponent } from '../servico.component';\r\n\r\nconst routes: Routes = [    \r\n    {\r\n        path: 'servicos', component: ServicosComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'servico/novo', component: ServicoComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'servico/visualizar/:id', component: ServicoComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'servico/editar/:id', component: ServicoComponent,\r\n        canActivate: [AuthGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class ServicosRouting { }\r\n","module.exports = \"<card [titulo]=\\\"'Novo'\\\">\\r\\n    <div card-body>\\r\\n        <form [formGroup]=\\\"formServico\\\" ngSubmit=\\\"salvar()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Nome\\\">Nome: </label>\\r\\n                    <input type=\\\"text\\\" name=\\\"Nome\\\" class=\\\"form-control\\\" id=\\\"Nome\\\" formControlName=\\\"Nome\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"GrupoServico\\\">Grupo de Serviço: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"GrupoServico\\\" id=\\\"GrupoServico\\\" formControlName=\\\"GrupoServico\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let grupo of grupos\\\" value=\\\"{{grupo.Id}}\\\">{{ grupo.Nome }}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"TipoServico\\\">Tipo de Serviço: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"TipoServico\\\" id=\\\"TipoServico\\\" formControlName=\\\"TipoServico\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let tipo of tipos\\\" value=\\\"{{tipo.Id}}\\\">{{ tipo.Nome }}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Prazo\\\">Prazo: </label>\\r\\n                    <input type=\\\"number\\\" name=\\\"Prazo\\\" class=\\\"form-control\\\" id=\\\"Prazo\\\" formControlName=\\\"Prazo\\\" (keypress)=\\\"apenasInteirosPositivos($event)\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"Procedimento\\\">Procedimento: </label>\\r\\n                    <textarea class=\\\"form-control\\\" id=\\\"Procedimento\\\" name=\\\"Procedimento\\\" formControlName=\\\"Procedimento\\\" maxlength=\\\"500\\\" rows=\\\"5\\\"></textarea>\\r\\n                    <label>{{500 - formServico.controls.Procedimento.value?.length}} de 500 caracteres.</label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"Descricao\\\">Descrição: </label>\\r\\n                    <textarea class=\\\"form-control\\\" id=\\\"Descricao\\\" name=\\\"Descricao\\\" formControlName=\\\"Descricao\\\" maxlength=\\\"500\\\" rows=\\\"5\\\"></textarea>\\r\\n                    <label>{{500 - formServico.controls.Descricao.value?.length}} de 500 caracteres.</label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div card-footer>\\r\\n        <div class=\\\"row justify-content-around\\\">\\r\\n            <div class=\\\"form-group col-sm-3\\\">\\r\\n                <button class=\\\"btn btn-block btn-danger\\\" (click)=\\\"voltar()\\\" type=\\\"button\\\"><span class=\\\"font-weight-bold\\\">Voltar</span> <span class=\\\"fa fa-arrow-left px-2\\\"></span></button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-3\\\">\\r\\n                <button class=\\\"btn btn-block btn-warning\\\" (click)=\\\"limpar()\\\" type=\\\"reset\\\"><span class=\\\"font-weight-bold\\\">Limpar</span> <span class=\\\"fa fa-ban px-2\\\"></span></button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-3\\\">\\r\\n                <button class=\\\"btn btn-block btn-success\\\" type=\\\"submit\\\"><span class=\\\"font-weight-bold\\\">Salvar</span> <span class=\\\"fa fa-save px-2\\\"></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IDepartamentoViewModel } from '../../viewModels/departamentoViewModel';\r\nimport { FuncoesGerais } from '../../shared/utils/funcoesGerais';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\nimport { IServicoViewModel } from '../../viewModels/ServicoViewModel';\r\n\r\n\r\n@Component({ providers: [FuncoesGerais], templateUrl: './servico.component.html'})\r\n\r\nexport class ServicoComponent implements OnInit {\r\n    public formServico: FormGroup;\r\n\r\n    public grupos: IDepartamentoViewModel[];\r\n    public tipos: IDepartamentoViewModel[];\r\n    \r\n    constructor(private api: ApiService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.buscarGrupos();\r\n        this.buscarTipos();\r\n\r\n        this.formServico = new FormGroup({\r\n            Nome: new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n            Descricao: new FormControl('', Validators.maxLength(500)),\r\n            Procedimento: new FormControl('', Validators.maxLength(500)),\r\n            Prazo: new FormControl('', [Validators.required, Validators.min(1)]),\r\n            TipoServico: new FormControl('', Validators.required),\r\n            GrupoServico: new FormControl('', Validators.required)\r\n        });\r\n\r\n        let id = null;\r\n        if (id)\r\n            this.buscarServico(id);\r\n    }\r\n\r\n    buscarServico(id?: number) {\r\n        this.api.get<IServicoViewModel>('api/Servico/' + id, (data) => {\r\n            this.formServico.get('').setValue('data.');\r\n        })\r\n    }\r\n\r\n    buscarGrupos() {\r\n        this.api.get<IDepartamentoViewModel[]>('api/Departamento', (result) => {\r\n            this.grupos = result;\r\n        });\r\n    }\r\n\r\n    buscarTipos(idDepartamento?: number) {\r\n        this.api.get<IDepartamentoViewModel[]>('api/Departamento', (result) => {\r\n            this.tipos = result;\r\n        });\r\n    }\r\n\r\n    apenasInteirosPositivos(event) {\r\n        if (!FuncoesGerais.inteiroPositivo(event.key))\r\n            event.preventDefault();        \r\n    }\r\n\r\n    salvar() {\r\n        this.api.post<IDepartamentoViewModel[]>('api/Servico', this.formServico.value, (result) => {\r\n            Swal.fire({\r\n                type: 'success',\r\n                title: 'Sucesso!',\r\n                text: 'Serviço salvo com sucesso!'\r\n            });\r\n\r\n            setTimeout(() => this.router.navigate(['/servico/visualizar/' + result.Id]), 5 * 1000);\r\n        });\r\n    }\r\n\r\n    limpar() {\r\n        this.formServico.reset();\r\n    }\r\n}\r\n","module.exports = \"<card [titulo]=\\\"'Filtros'\\\" [isCollapsed]=\\\"isFiltroCollapsed\\\">\\r\\n    <div card-body>\\r\\n        <form [formGroup]=\\\"formChamado\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Departamento\\\">Departamento: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"Departamento\\\" id=\\\"Departamento\\\" formControlName=\\\"Departamento\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let departamento of departamentos\\\">{{ departamento.Sigla }}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Unidade\\\">Unidade: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"Unidade\\\" id=\\\"Unidade\\\" formControlName=\\\"Unidade\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let unidade of unidades\\\">\\r\\n                            {{ unidade.Sigla }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Status\\\">Situação: </label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"Unidade\\\" id=\\\"Unidade\\\" formControlName=\\\"Unidade\\\">\\r\\n                        <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                        <option *ngFor=\\\"let s of status\\\">\\r\\n                            {{ s.Nome }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Inicio\\\">De: </label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input id=\\\"Inicio\\\" name=\\\"Inicio\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Inicio\\\" ngbDatepicker #de=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"de.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Fim\\\">Até: </label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input id=\\\"Fim\\\" name=\\\"Fim\\\" type=\\\"text\\\" style=\\\"background-color:white\\\" class=\\\"form-control\\\" formControlName=\\\"Fim\\\" ngbDatepicker #ate=\\\"ngbDatepicker\\\" [displayMonths]=\\\"2\\\" [navigation]=\\\"'arrows'\\\" />\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-primary fa fa-calendar\\\" (click)=\\\"ate.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"Solucionador\\\">Solucionador: </label>\\r\\n                    <input type=\\\"text\\\" name=\\\"Solucionador\\\" class=\\\"form-control\\\" id=\\\"Solucionador\\\" formControlName=\\\"Solucionador\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm\\\">\\r\\n                    <label for=\\\"AbertoPor\\\">Aberto Por: </label>\\r\\n                    <input type=\\\"text\\\" name=\\\"AbertoPor\\\" class=\\\"form-control\\\" id=\\\"AbertoPor\\\" formControlName=\\\"AbertoPor\\\" />\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\"><span class=\\\"font-weight-bold\\\">Buscar</span> <span class=\\\"fa fa-search px-2\\\"></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<card [titulo]=\\\"'Lista de Chamados'\\\">\\r\\n    <div card-body>\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <table class=\\\"table table-condensed table-hover table-striped table-responsive internal-tables\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <!--<th [hidden]=\\\"!gerenciandoChamados\\\"></th>-->\\r\\n                            <th>#</th>\\r\\n                            <th>Data Abertura</th>\\r\\n                            <th>Descrição</th>\\r\\n                            <!--<th>Un. Solicitante</th>-->\\r\\n                            <th>Solicitante</th>\\r\\n                            <!--<th>Un. Solucionador</th>-->\\r\\n                            <th>Solucionador</th>\\r\\n                            <th>Situação</th>\\r\\n                            <!--<th>Deadline</th>-->\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let chamado of chamados\\\">\\r\\n                            <!--<td [hidden]=\\\"!gerenciandoChamados || chamado.Servico.Grupo.Unidade.Id != usuarioLogado.Unidade.Id\\\">\\r\\n                                <input type=\\\"checkbox\\\" name=\\\"chamado-{{chamado.Id}}\\\" class=\\\"form-control\\\" id=\\\"chamado-{{chamado.Id}}\\\" formControlName=\\\"chamado-{{chamado.Id}}\\\" />\\r\\n                            </td>-->\\r\\n                            <td> {{ chamado.Id }} </td>\\r\\n                            <td> {{ chamado.DataSolicitacao | date : 'dd/MM/yyyy' }} </td>\\r\\n                            <td> {{ chamado.Descricao }}</td>\\r\\n                            <td> {{ chamado.Solicitante.Login }} </td>\\r\\n                            <td> {{ chamado.Solucionador.Login }} </td>\\r\\n                            <!--\\r\\n                            <td> {{ chamado.Status.Nome }} </td>\\r\\n                            <td> {{ chamado.Solicitante.Unidade.Sigla }} </td>\\r\\n                            <td> {{ chamado.Servico.Grupo.Unidade.Sigla }} </td>\\r\\n                            <td> {{ chamado.Deadline | date : 'dd/MM/yyyy' }} </td>\\r\\n                            -->\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div card-footer>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm\\\" [hidden]=\\\"gerenciandoChamados\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-primary font-weight-bold\\\" (click)=\\\"gerenciandoChamados = true\\\">Gerenciar Chamados</button></div>\\r\\n            <div class=\\\"col-sm\\\" [hidden]=\\\"!gerenciandoChamados\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-success font-weight-bold\\\" data-toggle=\\\"modal\\\" data-target=\\\"#SolverModal\\\" data-backdrop=\\\"static\\\">Confirmar</button></div>\\r\\n            <div class=\\\"col-sm\\\" [hidden]=\\\"!gerenciandoChamados\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-danger font-weight-bold\\\" (click)=\\\"gerenciandoChamados = false\\\">Cancelar</button></div>\\r\\n            <div class=\\\"col-sm\\\"><button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-outline-danger\\\"><span class=\\\"font-weight-bold\\\">PDF</span><span class=\\\"fa fa-file-pdf px-2\\\"></span></button></div>\\r\\n            <div class=\\\"col-sm\\\"> <button type=\\\"button\\\" class=\\\"btn btn-md btn-block btn-outline-success\\\"><span class=\\\"font-weight-bold\\\">Excel</span><span class=\\\"fa fa-file-excel px-2\\\"></span></button></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</card>\\r\\n\\r\\n<ng-template #modal let-modal>\\r\\n    <div class=\\\"modal-header main-color\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Atribuir Solucionador</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close main-color\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n            <span class=\\\"fa fa-times\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"formSolucionador\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"Solucionador\\\">Solucionador</label>\\r\\n                        <select class=\\\"form-control\\\" name=\\\"Solucionador\\\" id=\\\"Solucionador\\\" formControlName=\\\"Solucionador\\\">\\r\\n                            <option value=\\\"\\\" selected>Selecione...</option>\\r\\n                            <option *ngFor=\\\"let solucionador of usuarios\\\">\\r\\n                                {{ solucionador.Login }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <p *ngIf=\\\"solucionador\\\"><b>Deseja realmente atribuir o Usuário {{ solucionador.Login }} como Solucionador dos chamados selecionados ?</b></p>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"modal.dismiss()\\\"><span class=\\\"font-weight-bold\\\">Cancelar</span> <span class=\\\"fa fa-times px-2\\\"></span></button>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"formSolucionador.invalid\\\" (click)=\\\"setarSolucionador()\\\"><span class=\\\"font-weight-bold\\\">Confirmar</span> <span class=\\\"fa fa-save px-2\\\"></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"abrirModal(modal)\\\">Launch demo modal</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IDepartamentoViewModel } from '../../viewModels/departamentoViewModel';\r\n//import { IServicoViewModel } from '../../viewModels/servicoViewModel';\r\nimport { IUsuarioViewModel } from '../../viewModels/usuarioViewModel';\r\nimport { IStatusViewModel } from '../../viewModels/statusViewModel';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({ templateUrl: './servicos.component.html', providers: [NgbModalConfig, NgbModal]})\r\n\r\nexport class ServicosComponent implements OnInit {\r\n    public formServico: FormGroup;\r\n    public formSolucionador: FormGroup;\r\n\r\n    public status: IStatusViewModel[];\r\n    public usuarios: IUsuarioViewModel[];\r\n    //public servicos: IServicoViewModel[];\r\n    public departamentos: IDepartamentoViewModel[];\r\n\r\n    public isFiltroCollapsed: boolean;\r\n    public gerenciandoServicos: boolean;\r\n\r\n    constructor(private api: ApiService, private config: NgbModalConfig, private modalService: NgbModal) {\r\n        config.backdrop = 'static';\r\n        config.keyboard = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isFiltroCollapsed = false;\r\n        this.gerenciandoServicos = false;\r\n\r\n        //this.buscarServicos();\r\n        this.buscarDepartamentos();\r\n        this.buscarStatus();\r\n        this.buscarUsuarios();\r\n\r\n        this.formServico = new FormGroup({\r\n            Departamento: new FormControl(''),\r\n            Unidade: new FormControl(''),\r\n            Status: new FormControl(''),\r\n            Inicio: new FormControl(''),\r\n            Fim: new FormControl(''),\r\n            AbertoPor: new FormControl(''),\r\n            Solucionador: new FormControl('')\r\n        });\r\n\r\n        this.formSolucionador = new FormGroup({\r\n            Solucionador: new FormControl('', Validators.required)\r\n        });\r\n    }\r\n\r\n    abrirModal(modal) {\r\n        this.modalService.open(modal);\r\n    }\r\n\r\n    //buscarServicos(idDepartamento?: number, idUnidade?: number, idStatus?: number, idLogin?: number) {\r\n    //    this.api.get<IServicoViewModel[]>('api/Servico', (result) => {\r\n    //        this.servicos = result;\r\n    //    });\r\n    //}\r\n\r\n    buscarDepartamentos() {\r\n        this.api.get<IDepartamentoViewModel[]>('api/Departamento', (result) => {\r\n            this.departamentos = result;\r\n        });\r\n    }\r\n\r\n    buscarStatus() {\r\n        this.api.get<IStatusViewModel[]>('api/Status', (result) => {\r\n            this.status = result;\r\n        });\r\n    }\r\n\r\n    buscarUsuarios() {\r\n        this.api.get<IUsuarioViewModel[]>('api/Usuario', (result) => {\r\n            this.usuarios = result;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"box\\\">\\r\\n  <div class=\\\"box-header with-border\\\" style=\\\"padding: 10px !important;\\\">\\r\\n    <h3 class=\\\"box-title\\\"><b>{{titulo}}</b></h3>\\r\\n    <div class=\\\"box-tools pull-right\\\">\\r\\n      <a class=\\\"btn btn-sm btn-flat btn-primary\\\"><span class=\\\"fa fa-plus\\\"></span></a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"box-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"table-responsive col-sm-12\\\">\\r\\n        <table class=\\\"table table-condensed table-hover table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th style=\\\"text-align:center\\\">Login</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let entidade of entidades\\\">\\r\\n              <td>{{ entidade.Login }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { IUsuarioViewModel } from '../../viewModels/usuarioViewModel';\r\n\r\n@Component({\r\n    selector: 'app-usuario',\r\n    templateUrl: './usuario.component.html',\r\n})\r\n\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n    public titulo = 'Usuário';\r\n    public entidades: IUsuarioViewModel[];\r\n\r\n    constructor(private api: ApiService) { }\r\n\r\n    ngOnInit() {\r\n        this.buscarUsuarios();\r\n    }\r\n\r\n    buscarUsuarios() {\r\n        this.api.get<IUsuarioViewModel[]>('api/Usuario', (result) => {\r\n            this.entidades = result;\r\n        });\r\n    }\r\n}\r\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\n\r\nexport const BASE_API_URL = new InjectionToken<string>('baseApiUrl');\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n    private requisitions = 0;\r\n\r\n    constructor(@Inject(BASE_API_URL) private apiUrl: string, ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.requisitions == 0)\r\n            //this.spinner.show();\r\n\r\n        this.requisitions++;\r\n\r\n        let url = request.url.split('/');\r\n        if (url[2] != 'viacep.com.br') {\r\n            request = request.clone({ url: this.prepareUrl(request.url) });\r\n            const currentUser = JSON.parse(localStorage.getItem('usuarioLogado'));\r\n            if (currentUser && currentUser.Token) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: `Bearer ${currentUser.Token}`\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request).pipe(catchError(error => {\r\n            if (error.status === 401) {\r\n                localStorage.removeItem('usuarioLogado');\r\n                location.reload(true);\r\n            }\r\n\r\n            return throwError(error);\r\n        }),\r\n        finalize(() => {\r\n            this.requisitions--;\r\n            if (this.requisitions == 0) console.log('this.spinner.hide()');\r\n        }));\r\n    }\r\n\r\n    private isAbsoluteUrl(url: string): boolean {\r\n        const absolutePattern = /^https?:\\/\\//i;\r\n        return absolutePattern.test(url);\r\n    }\r\n\r\n    private prepareUrl(url: string): string {\r\n        url = this.isAbsoluteUrl(url) || this.apiUrl === '/' ? url : this.apiUrl + '/' + url;\r\n        return url.replace(/([^:]\\/)\\/+/g, '$1');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface IApiResponse<T> {\r\n    Data: T;\r\n    IsSuccess: boolean;\r\n    Messages: string[];\r\n}\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T como parâmetro\r\n     * @param url url a qual será realizada a operação\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    public get<T>(url: string, callback = null) {\r\n        return this.http.get<IApiResponse<T>>(url).subscribe\r\n            (\r\n            (result) => this.checkReturn<T>(result, callback),\r\n            (error) => this.alertError(error)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T como parâmetro\r\n     * @param url url a qual será realizada a operação\r\n     * @param data dados a serem enviados\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    public getWithFilter<T>(url: string, data: any, callback = null) {\r\n\r\n        let params = new HttpParams({\r\n            fromObject: data\r\n        });\r\n\r\n        this.http.request<IApiResponse<T>>('get', url, { params: params }).subscribe\r\n            (\r\n            (result) => this.checkReturn<T>(result, callback),\r\n            (error) => this.alertError(error)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T ou o Array de IApiResponse<T> como parâmetro\r\n     * @param url url a qual será realizada a operação\r\n     * @param data dados a serem enviados\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    public post<T>(url: string, data: T, callback = null) {\r\n        return this.http.post<IApiResponse<T>[]>(url, [data]).subscribe\r\n            (\r\n            (result) => this.checkReturns<T>(result, callback),\r\n            (error) => this.alertError(error)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T ou o Array de IApiResponse<T> como parâmetro\r\n     * @param url url a qual será realizada a operação\r\n     * @param data dados a serem enviados\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    public put<T>(url: string, data: T, callback = null) {\r\n        return this.http.put<IApiResponse<T>[]>(url, [data]).subscribe\r\n            (\r\n            (result) => this.checkReturns<T>(result, callback),\r\n            (error) => this.alertError(error)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T como parâmetro\r\n     * @param url url a qual será realizada a operação\r\n     * @param ids ids das entidades a serem excluídas\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    public delete<T>(url: string, ids: number[], callback = null) {\r\n        return this.http.request<IApiResponse<T>>('delete', url, { body: ids }).subscribe\r\n            (\r\n            (result) => this.checkReturn<T>(result, callback),\r\n            (error) => this.alertError(error)\r\n            );\r\n    }\r\n\r\n    /**\r\n    * Verifica se a operação foi executada com sucesso e retorna a entidade ou então exibe uma mensagem com o erro.\r\n    * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T como parâmetro \r\n    * @param results Resultado\r\n    * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n    */\r\n    private checkReturn<T>(result: IApiResponse<T>, callback = null) {\r\n        if (result.IsSuccess) {\r\n            if (callback)\r\n                callback(result.Data);\r\n            else\r\n                return result.Data;\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                type: 'error',\r\n                title: 'Erro ao processar a sua requisição!',\r\n                text: result.Messages.join(',')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Verifica se a operação foi para uma entidade, em caso positivo chama checkResult, em caso negativo retorna um Array de IApiResponse<T> com as validações individuais de cada entidade\r\n     * Obs: Caso seja passado um callback não existirá retorno, ao fim da requisição será chamada a função de callback passando a entidade T como parâmetro\r\n     * @param results Array de resultados\r\n     * @param callback Função a ser chamada após o retorno da requisição (Será passado o retorno como parâmetro)\r\n     */\r\n    private checkReturns<T>(results: any, callback = null) {\r\n        if (!Array.isArray(results))\r\n            this.checkReturn(results, callback);\r\n        else if (results.length == 1)\r\n            this.checkReturn(results[0], callback);\r\n        else {\r\n            if (callback)\r\n                callback(results);\r\n            else\r\n                return results;\r\n        }\r\n    }\r\n\r\n    private alertError(error) {\r\n        Swal.fire({\r\n            type: 'error',\r\n            title: \"Erro\",\r\n            text: \"Ocorreu um erro ao processar a sua requisição!\"\r\n        });\r\n\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header main-color\\\">\\r\\n            <div class=\\\"row align-items-center\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <h4>{{titulo}}</h4>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" *ngIf=\\\"!(isCollapsed == null || isCollapsed == undefined)\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default float-right main-color\\\" (click)=\\\"isCollapsed = !isCollapsed\\\">\\r\\n                        <span *ngIf=\\\"isCollapsed\\\" class=\\\"fa fa-plus\\\"></span>\\r\\n                        <span *ngIf=\\\"!isCollapsed\\\" class=\\\"fa fa-minus\\\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\r\\n            <ng-content select=\\\"[card-body]\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n            <ng-content select=\\\"[card-footer]\\\"></ng-content>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'card',\r\n    templateUrl: './card.component.html',\r\n})\r\n\r\nexport class CardComponent {\r\n    @Input() titulo: string;\r\n    @Input() isCollapsed?: boolean;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CardComponent } from './card/card.component';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n        CardComponent\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        CommonModule,\r\n    ],\r\n    exports: [CardComponent],\r\n    providers: [ApiService]\r\n})\r\nexport class SharedModule { }\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { isNumber } from 'util';\r\n\r\nexport class FuncoesGerais {\r\n    public static inteiroPositivo(valor: any) {\r\n        if (isNumber(valor))\r\n            return valor.toPrecision(0).length > 0;\r\n        else\r\n            return valor.replace(/^\\D+/g, '').length > 0;\r\n    }\r\n\r\n    public static apenasInteirosPositivos(valor: any) {\r\n        if (isNumber(valor))\r\n            return valor.toPrecision(0);\r\n        else\r\n            return valor.replace(/^\\D+/g, '');\r\n    }\r\n}\r\n","export interface IDepartamentoViewModel {    \r\n    Id: number;\r\n    Nome: string;\r\n    Sigla: string;\r\n}\r\n\r\nexport class DepartamentoViewModel implements IDepartamentoViewModel {\r\n    Id: number;\r\n    Nome: string;\r\n    Sigla: string;\r\n\r\n    constructor(departamento: IDepartamentoViewModel) {\r\n        if (!departamento) {\r\n            return;\r\n        }\r\n\r\n        this.Id = departamento.Id;\r\n        this.Nome = departamento.Nome;\r\n        this.Sigla = departamento.Sigla;\r\n    }\r\n}\r\n","export interface IFuncionalidadeViewModel {\r\n    Id: number;\r\n    Nome: string;\r\n    Salvar: boolean;\r\n    Alterar: boolean;\r\n    Deletar: boolean;\r\n    Consultar: boolean;\r\n}\r\n\r\nexport class FuncionalidadeViewModel implements IFuncionalidadeViewModel {\r\n    Id: number;\r\n    Nome: string;\r\n    Salvar: boolean;\r\n    Alterar: boolean;\r\n    Deletar: boolean;\r\n    Consultar: boolean;\r\n\r\n    constructor(funcionalidade: IFuncionalidadeViewModel) {\r\n        if (!funcionalidade) {\r\n            return;\r\n        }\r\n\r\n        this.Id = funcionalidade.Id;\r\n        this.Nome = funcionalidade.Nome;\r\n        this.Salvar = funcionalidade.Salvar;\r\n        this.Alterar = funcionalidade.Alterar;\r\n        this.Deletar = funcionalidade.Deletar;\r\n        this.Consultar = funcionalidade.Consultar;\r\n    }\r\n}\r\n","import { FuncionalidadeViewModel } from './funcionalidadeViewModel';\r\n\r\nexport interface IPermissaoViewModel {\r\n    Id: number;\r\n    Nome: string;\r\n    Descricao: string;\r\n    Funcionalidades: FuncionalidadeViewModel[];\r\n}\r\n\r\nexport class PermissaoViewModel implements IPermissaoViewModel {\r\n    Id: number;\r\n    Nome: string;\r\n    Descricao: string;\r\n    Funcionalidades: FuncionalidadeViewModel[];\r\n\r\n    constructor(permissao: IPermissaoViewModel) {\r\n        if (!permissao) {\r\n            return;\r\n        }\r\n\r\n        this.Id = permissao.Id;\r\n        this.Nome = permissao.Nome;\r\n        this.Descricao = permissao.Descricao;\r\n        this.Funcionalidades = permissao.Funcionalidades ? permissao.Funcionalidades : [new FuncionalidadeViewModel(null)];\r\n    }\r\n}\r\n","import { DepartamentoViewModel } from './departamentoViewModel';\r\nimport { PermissaoViewModel } from './permissaoViewModel';\r\n\r\nexport interface IUsuarioViewModel {\r\n    Login: string;\r\n    Senha: string;\r\n    Token: string;\r\n    Departamento: DepartamentoViewModel;\r\n    Permissoes: PermissaoViewModel[];\r\n}\r\n\r\nexport class UsuarioViewModel implements IUsuarioViewModel {\r\n    Login: string;\r\n    Senha: string;\r\n    Token: string;\r\n    Departamento: DepartamentoViewModel;\r\n    Permissoes: PermissaoViewModel[];\r\n\r\n    constructor(usuario: IUsuarioViewModel) {\r\n        if (!usuario) {\r\n            return;\r\n        }\r\n\r\n        this.Login = usuario.Login;\r\n        this.Senha = usuario.Senha;\r\n        this.Token = usuario.Token;\r\n        this.Departamento = usuario.Departamento ? usuario.Departamento : new DepartamentoViewModel(null);\r\n        this.Permissoes = usuario.Permissoes ? usuario.Permissoes : [new PermissaoViewModel(null)];\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    Production: false,\n    BaseApiUrl: 'http://localhost:56040/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.Production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}